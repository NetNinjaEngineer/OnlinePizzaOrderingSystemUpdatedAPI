// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlinePizzaOrderingSystemUpdatedAPI.Data;

#nullable disable

namespace OnlinePizzaOrderingSystemUpdatedAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<int?>("CustomerId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal>("DiscountAmount")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UsageCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("Coupons", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "SUMMER25",
                            CustomerId = 1,
                            DiscountAmount = 25.00m,
                            ExpirationDate = new DateTime(2023, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageCount = 5
                        },
                        new
                        {
                            Id = 2,
                            Code = "FALL20",
                            CustomerId = 2,
                            DiscountAmount = 20.00m,
                            ExpirationDate = new DateTime(2023, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageCount = 10
                        },
                        new
                        {
                            Id = 3,
                            Code = "WINTER15",
                            CustomerId = 3,
                            DiscountAmount = 15.00m,
                            ExpirationDate = new DateTime(2024, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageCount = 20
                        },
                        new
                        {
                            Id = 4,
                            Code = "SPRING10",
                            CustomerId = 4,
                            DiscountAmount = 10.00m,
                            ExpirationDate = new DateTime(2024, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageCount = 15
                        },
                        new
                        {
                            Id = 5,
                            Code = "NEWYEAR30",
                            CustomerId = 5,
                            DiscountAmount = 30.00m,
                            ExpirationDate = new DateTime(2023, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageCount = 2
                        },
                        new
                        {
                            Id = 6,
                            Code = "MEMORIAL20",
                            CustomerId = 6,
                            DiscountAmount = 20.00m,
                            ExpirationDate = new DateTime(2023, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageCount = 10
                        },
                        new
                        {
                            Id = 7,
                            Code = "LABORDAY15",
                            CustomerId = 7,
                            DiscountAmount = 15.00m,
                            ExpirationDate = new DateTime(2023, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageCount = 5
                        },
                        new
                        {
                            Id = 8,
                            Code = "HALLOWEEN10",
                            CustomerId = 8,
                            DiscountAmount = 10.00m,
                            ExpirationDate = new DateTime(2023, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageCount = 8
                        },
                        new
                        {
                            Id = 9,
                            Code = "BLACKFRIDAY25",
                            CustomerId = 9,
                            DiscountAmount = 25.00m,
                            ExpirationDate = new DateTime(2023, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageCount = 3
                        },
                        new
                        {
                            Id = 10,
                            Code = "CYBERMONDAY20",
                            CustomerId = 10,
                            DiscountAmount = 20.00m,
                            ExpirationDate = new DateTime(2023, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageCount = 5
                        },
                        new
                        {
                            Id = 11,
                            Code = "CHRISTMAS30",
                            CustomerId = 11,
                            DiscountAmount = 30.00m,
                            ExpirationDate = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageCount = 2
                        },
                        new
                        {
                            Id = 12,
                            Code = "VALENTINE15",
                            CustomerId = 12,
                            DiscountAmount = 15.00m,
                            ExpirationDate = new DateTime(2024, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageCount = 10
                        },
                        new
                        {
                            Id = 13,
                            Code = "EASTER10",
                            CustomerId = 13,
                            DiscountAmount = 10.00m,
                            ExpirationDate = new DateTime(2024, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageCount = 15
                        },
                        new
                        {
                            Id = 14,
                            Code = "MOTHERSDAY25",
                            CustomerId = 14,
                            DiscountAmount = 25.00m,
                            ExpirationDate = new DateTime(2024, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageCount = 5
                        },
                        new
                        {
                            Id = 15,
                            Code = "FATHERSDAY20",
                            CustomerId = 15,
                            DiscountAmount = 20.00m,
                            ExpirationDate = new DateTime(2024, 6, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsageCount = 8
                        });
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeliveryAddress = "123 Main St",
                            Email = "john.smith@example.com",
                            Name = "John Smith"
                        },
                        new
                        {
                            Id = 2,
                            DeliveryAddress = "456 Oak Ave",
                            Email = "jane.doe@example.com",
                            Name = "Jane Doe"
                        },
                        new
                        {
                            Id = 3,
                            DeliveryAddress = "789 Elm St",
                            Email = "bob.johnson@example.com",
                            Name = "Bob Johnson"
                        },
                        new
                        {
                            Id = 4,
                            DeliveryAddress = "321 Maple Rd",
                            Email = "sarah.lee@example.com",
                            Name = "Sarah Lee"
                        },
                        new
                        {
                            Id = 5,
                            DeliveryAddress = "654 Pine Blvd",
                            Email = "david.kim@example.com",
                            Name = "David Kim"
                        },
                        new
                        {
                            Id = 6,
                            DeliveryAddress = "987 Cedar Dr",
                            Email = "maria.hernandez@example.com",
                            Name = "Maria Hernandez"
                        },
                        new
                        {
                            Id = 7,
                            DeliveryAddress = "246 Birch Ln",
                            Email = "tom.wilson@example.com",
                            Name = "Tom Wilson"
                        },
                        new
                        {
                            Id = 8,
                            DeliveryAddress = "135 Oakwood Ave",
                            Email = "emily.chen@example.com",
                            Name = "Emily Chen"
                        },
                        new
                        {
                            Id = 9,
                            DeliveryAddress = "864 Maple St",
                            Email = "michael.brown@example.com",
                            Name = "Michael Brown"
                        },
                        new
                        {
                            Id = 10,
                            DeliveryAddress = "753 Pine Ave",
                            Email = "amy.nguyen@example.com",
                            Name = "Amy Nguyen"
                        },
                        new
                        {
                            Id = 11,
                            DeliveryAddress = "246 Cedar Ln",
                            Email = "james.lee@example.com",
                            Name = "James Lee"
                        },
                        new
                        {
                            Id = 12,
                            DeliveryAddress = "975 Oak St",
                            Email = "samantha.patel@example.com",
                            Name = "Samantha Patel"
                        },
                        new
                        {
                            Id = 13,
                            DeliveryAddress = "864 Maple Rd",
                            Email = "william.johnson@example.com",
                            Name = "William Johnson"
                        },
                        new
                        {
                            Id = 14,
                            DeliveryAddress = "753 Pine St",
                            Email = "linda.davis@example.com",
                            Name = "Linda Davis"
                        },
                        new
                        {
                            Id = 15,
                            DeliveryAddress = "246 Cedar Ave",
                            Email = "chris.wilson@example.com",
                            Name = "Chris Wilson"
                        });
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.CustomerMenuItems", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId", "MenuItemId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("CustomerMenuItems", (string)null);

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            MenuItemId = 1
                        },
                        new
                        {
                            CustomerId = 2,
                            MenuItemId = 2
                        },
                        new
                        {
                            CustomerId = 3,
                            MenuItemId = 3
                        },
                        new
                        {
                            CustomerId = 4,
                            MenuItemId = 4
                        },
                        new
                        {
                            CustomerId = 5,
                            MenuItemId = 5
                        },
                        new
                        {
                            CustomerId = 6,
                            MenuItemId = 6
                        },
                        new
                        {
                            CustomerId = 7,
                            MenuItemId = 7
                        },
                        new
                        {
                            CustomerId = 8,
                            MenuItemId = 8
                        },
                        new
                        {
                            CustomerId = 9,
                            MenuItemId = 9
                        },
                        new
                        {
                            CustomerId = 10,
                            MenuItemId = 10
                        },
                        new
                        {
                            CustomerId = 11,
                            MenuItemId = 11
                        },
                        new
                        {
                            CustomerId = 12,
                            MenuItemId = 12
                        },
                        new
                        {
                            CustomerId = 13,
                            MenuItemId = 13
                        },
                        new
                        {
                            CustomerId = 14,
                            MenuItemId = 14
                        },
                        new
                        {
                            CustomerId = 15,
                            MenuItemId = 15
                        });
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.DeliveryDriver", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<int?>("StoreId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("VehicleInformation")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("DeliveryDrivers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "John Smith",
                            PhoneNumber = "555-1234",
                            StoreId = 1,
                            VehicleInformation = "2018 Honda Civic"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Jane Doe",
                            PhoneNumber = "555-5678",
                            StoreId = 2,
                            VehicleInformation = "2020 Toyota Camry"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bob Johnson",
                            PhoneNumber = "555-9012",
                            StoreId = 3,
                            VehicleInformation = "2019 Ford F-150"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Sarah Lee",
                            PhoneNumber = "555-3456",
                            StoreId = 4,
                            VehicleInformation = "2017 Nissan Altima"
                        },
                        new
                        {
                            Id = 5,
                            Name = "David Kim",
                            PhoneNumber = "555-7890",
                            StoreId = 5,
                            VehicleInformation = "2021 Honda Accord"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Maria Hernandez",
                            PhoneNumber = "555-2345",
                            StoreId = 6,
                            VehicleInformation = "2016 Toyota Corolla"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Tom Wilson",
                            PhoneNumber = "555-6789",
                            StoreId = 7,
                            VehicleInformation = "2017 Ford Escape"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Emily Chen",
                            PhoneNumber = "555-0123",
                            StoreId = 8,
                            VehicleInformation = "2018 Honda CR-V"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Amy Nguyen",
                            PhoneNumber = "555-8901",
                            StoreId = 9,
                            VehicleInformation = "2020 Nissan Rogue"
                        });
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("LocationId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationId = 1,
                            Name = "John Smith",
                            PhoneNumber = "555-1234",
                            Position = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            LocationId = 2,
                            Name = "Bob Johnson",
                            PhoneNumber = "555-2468",
                            Position = "Cook"
                        },
                        new
                        {
                            Id = 4,
                            LocationId = 3,
                            Name = "Sue Davis",
                            PhoneNumber = "555-7890",
                            Position = "FoodPrep"
                        },
                        new
                        {
                            Id = 5,
                            LocationId = 4,
                            Name = "Mike Brown",
                            PhoneNumber = "555-1357",
                            Position = "DeliveryDriver"
                        },
                        new
                        {
                            Id = 6,
                            LocationId = 5,
                            Name = "Mary Williams",
                            PhoneNumber = "555-3690",
                            Position = "Cleaner"
                        });
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)");

                    b.Property<int?>("InventoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("Ingredients", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 0.99m,
                            Name = "Flour",
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 3,
                            Cost = 0.50m,
                            Name = "Salt",
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 4,
                            Cost = 2.50m,
                            Name = "Butter",
                            SupplierId = 3
                        },
                        new
                        {
                            Id = 5,
                            Cost = 3.00m,
                            Name = "Eggs",
                            SupplierId = 4
                        },
                        new
                        {
                            Id = 6,
                            Cost = 1.50m,
                            Name = "Milk",
                            SupplierId = 5
                        },
                        new
                        {
                            Id = 7,
                            Cost = 0.99m,
                            Name = "Baking powder",
                            SupplierId = 6
                        },
                        new
                        {
                            Id = 8,
                            Cost = 0.50m,
                            Name = "Baking soda",
                            SupplierId = 7
                        },
                        new
                        {
                            Id = 9,
                            Cost = 1.99m,
                            Name = "Vanilla extract",
                            SupplierId = 8
                        },
                        new
                        {
                            Id = 10,
                            Cost = 2.99m,
                            Name = "Chocolate chips",
                            SupplierId = 9
                        },
                        new
                        {
                            Id = 11,
                            Cost = 2.50m,
                            Name = "Cocoa powder",
                            SupplierId = 10
                        });
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Locations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            Email = "info@location1.com",
                            PhoneNumber = "555-1234"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Elm St",
                            Email = "info@location2.com",
                            PhoneNumber = "555-5678"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Oak St",
                            Email = "info@location3.com",
                            PhoneNumber = "555-2468"
                        },
                        new
                        {
                            Id = 4,
                            Address = "321 Pine St",
                            Email = "info@location4.com",
                            PhoneNumber = "555-7890"
                        },
                        new
                        {
                            Id = 5,
                            Address = "654 Cedar St",
                            Email = "info@location5.com",
                            PhoneNumber = "555-1357"
                        });
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal>("Price")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("Id");

                    b.ToTable("MenuItems", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Juicy beef burger topped with melted cheese",
                            Name = "Cheeseburger",
                            Price = 9.99m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Classic pizza with tomato sauce, mozzarella cheese, and fresh basil",
                            Name = "Margherita Pizza",
                            Price = 11.99m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Fresh romaine lettuce with croutons, parmesan cheese, and Caesar dressing",
                            Name = "Caesar Salad",
                            Price = 7.99m
                        },
                        new
                        {
                            Id = 4,
                            Description = "Pasta with bacon, eggs, cream, and parmesan cheese",
                            Name = "Spaghetti Carbonara",
                            Price = 12.99m
                        },
                        new
                        {
                            Id = 5,
                            Description = "Crispy battered fish with French fries and tartar sauce",
                            Name = "Fish and Chips",
                            Price = 10.99m
                        },
                        new
                        {
                            Id = 6,
                            Description = "Pasta with grilled chicken and creamy Alfredo sauce",
                            Name = "Chicken Alfredo",
                            Price = 13.99m
                        },
                        new
                        {
                            Id = 7,
                            Description = "Fresh salmon fillet grilled to perfection with lemon butter sauce",
                            Name = "Grilled Salmon",
                            Price = 14.99m
                        },
                        new
                        {
                            Id = 8,
                            Description = "Sliced beef with mixed vegetables in a savory sauce, served over rice",
                            Name = "Beef Stir Fry",
                            Price = 11.99m
                        },
                        new
                        {
                            Id = 9,
                            Description = "Grilled vegetables with hummus and feta cheese, wrapped in a spinach tortilla",
                            Name = "Veggie Wrap",
                            Price = 8.99m
                        },
                        new
                        {
                            Id = 10,
                            Description = "Slow-cooked pork ribs with BBQ sauce and coleslaw",
                            Name = "BBQ Ribs",
                            Price = 15.99m
                        },
                        new
                        {
                            Id = 11,
                            Description = "Creamy Arborio rice with mushrooms and parmesan cheese",
                            Name = "Mushroom Risotto",
                            Price = 10.99m
                        },
                        new
                        {
                            Id = 12,
                            Description = "Three soft tacos with seasoned beef, lettuce, cheese, and salsa",
                            Name = "Beef Tacos",
                            Price = 9.99m
                        },
                        new
                        {
                            Id = 13,
                            Description = "Pasta with shrimp, garlic, butter, and white wine sauce",
                            Name = "Shrimp Scampi",
                            Price = 13.99m
                        },
                        new
                        {
                            Id = 14,
                            Description = "Mixed vegetables in a spicy curry sauce, served over rice",
                            Name = "Vegetable Curry",
                            Price = 10.99m
                        },
                        new
                        {
                            Id = 15,
                            Description = "Grilled chicken with romaine lettuce, croutons, and Caesar dressing, wrapped in a flour tortilla",
                            Name = "Chicken Caesar Wrap",
                            Price = 8.99m
                        });
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("DeliveryDriverId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("OrderTime")
                        .HasColumnType("time");

                    b.Property<decimal>("TotalCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeliveryDriverId");

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            DeliveryDriverId = 1,
                            DeliveryOptions = "Standard",
                            OrderDate = new DateTime(2023, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            OrderTime = new TimeSpan(627494922009),
                            TotalCost = 50.0m
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            DeliveryDriverId = 1,
                            DeliveryOptions = "InStorePickup",
                            OrderDate = new DateTime(2023, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            OrderTime = new TimeSpan(627494922099),
                            TotalCost = 25.0m
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 2,
                            DeliveryDriverId = 3,
                            DeliveryOptions = "WhiteGlove",
                            OrderDate = new DateTime(2023, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            OrderTime = new TimeSpan(627494922111),
                            TotalCost = 75.0m
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 4,
                            DeliveryDriverId = 2,
                            DeliveryOptions = "WhiteGlove",
                            OrderDate = new DateTime(2023, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            OrderTime = new TimeSpan(627494922122),
                            TotalCost = 100.0m
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 3,
                            DeliveryDriverId = 5,
                            DeliveryOptions = "InStorePickup",
                            OrderDate = new DateTime(2023, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            OrderTime = new TimeSpan(627494922132),
                            TotalCost = 60.0m
                        },
                        new
                        {
                            Id = 6,
                            CustomerId = 6,
                            DeliveryDriverId = 3,
                            DeliveryOptions = "InStorePickup",
                            OrderDate = new DateTime(2023, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            OrderTime = new TimeSpan(627494922144),
                            TotalCost = 80.0m
                        },
                        new
                        {
                            Id = 7,
                            CustomerId = 4,
                            DeliveryDriverId = 7,
                            DeliveryOptions = "Standard",
                            OrderDate = new DateTime(2023, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            OrderTime = new TimeSpan(627494922154),
                            TotalCost = 30.0m
                        },
                        new
                        {
                            Id = 8,
                            CustomerId = 5,
                            DeliveryDriverId = 8,
                            DeliveryOptions = "Express",
                            OrderDate = new DateTime(2023, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            OrderTime = new TimeSpan(627494922164),
                            TotalCost = 90.0m
                        },
                        new
                        {
                            Id = 9,
                            CustomerId = 9,
                            DeliveryDriverId = 4,
                            DeliveryOptions = "CurbsidePickup",
                            OrderDate = new DateTime(2023, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            OrderTime = new TimeSpan(627494922174),
                            TotalCost = 120.0m
                        },
                        new
                        {
                            Id = 10,
                            CustomerId = 6,
                            DeliveryDriverId = 9,
                            DeliveryOptions = "Express",
                            OrderDate = new DateTime(2023, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            OrderTime = new TimeSpan(627494922185),
                            TotalCost = 70.0m
                        },
                        new
                        {
                            Id = 11,
                            CustomerId = 7,
                            DeliveryDriverId = 2,
                            DeliveryOptions = "CurbsidePickup",
                            OrderDate = new DateTime(2023, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            OrderTime = new TimeSpan(627494922195),
                            TotalCost = 50.0m
                        },
                        new
                        {
                            Id = 12,
                            CustomerId = 12,
                            DeliveryDriverId = 5,
                            DeliveryOptions = "Express",
                            OrderDate = new DateTime(2023, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            OrderTime = new TimeSpan(627494922205),
                            TotalCost = 25.0m
                        },
                        new
                        {
                            Id = 13,
                            CustomerId = 8,
                            DeliveryDriverId = 1,
                            DeliveryOptions = "WhiteGlove",
                            OrderDate = new DateTime(2023, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            OrderTime = new TimeSpan(627494922215),
                            TotalCost = 75.0m
                        },
                        new
                        {
                            Id = 14,
                            CustomerId = 14,
                            DeliveryDriverId = 6,
                            DeliveryOptions = "WhiteGlove",
                            OrderDate = new DateTime(2023, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            OrderTime = new TimeSpan(627494922225),
                            TotalCost = 100.0m
                        },
                        new
                        {
                            Id = 15,
                            CustomerId = 9,
                            DeliveryDriverId = 3,
                            DeliveryOptions = "Standard",
                            OrderDate = new DateTime(2023, 10, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            OrderTime = new TimeSpan(627494922234),
                            TotalCost = 60.0m
                        });
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            Price = 9.99m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 2,
                            Price = 11.99m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 3,
                            Price = 7.99m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 4,
                            OrderId = 4,
                            Price = 12.99m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 5,
                            OrderId = 5,
                            Price = 10.99m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 6,
                            OrderId = 6,
                            Price = 13.99m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 7,
                            OrderId = 7,
                            Price = 14.99m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 8,
                            OrderId = 8,
                            Price = 11.99m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 9,
                            OrderId = 9,
                            Price = 8.99m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 10,
                            OrderId = 10,
                            Price = 15.99m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 11,
                            OrderId = 11,
                            Price = 10.99m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 12,
                            OrderId = 12,
                            Price = 9.99m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 13,
                            OrderId = 13,
                            Price = 13.99m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 14,
                            OrderId = 14,
                            Price = 10.99m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 15,
                            OrderId = 15,
                            Price = 8.99m,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal>("PaymentAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("Payments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            PaymentAmount = 50.0m,
                            PaymentMethod = "CreditCard"
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            PaymentAmount = 25.0m,
                            PaymentMethod = "Cash"
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            PaymentAmount = 75.0m,
                            PaymentMethod = "MobilePayment"
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 4,
                            PaymentAmount = 100.0m,
                            PaymentMethod = "GiftCards"
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 5,
                            PaymentAmount = 60.0m,
                            PaymentMethod = "DigitalWallets"
                        },
                        new
                        {
                            Id = 6,
                            CustomerId = 6,
                            PaymentAmount = 80.0m,
                            PaymentMethod = "Cryptocurrency"
                        },
                        new
                        {
                            Id = 7,
                            CustomerId = 7,
                            PaymentAmount = 30.0m,
                            PaymentMethod = "Checks"
                        });
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal>("Price")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Pizzas", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pepperoni",
                            Price = 30.25m,
                            Size = 12.0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Vegetarian",
                            Price = 20m,
                            Size = 10.0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Meat Lovers",
                            Price = 100m,
                            Size = 16.0
                        },
                        new
                        {
                            Id = 4,
                            Name = "Supreme",
                            Price = 25.50m,
                            Size = 14.0
                        },
                        new
                        {
                            Id = 5,
                            Name = "Hawaiian",
                            Price = 30.25m,
                            Size = 12.0
                        },
                        new
                        {
                            Id = 6,
                            Name = "Margherita",
                            Price = 35.75m,
                            Size = 14.0
                        },
                        new
                        {
                            Id = 7,
                            Name = "BBQ Chicken",
                            Price = 70m,
                            Size = 16.0
                        },
                        new
                        {
                            Id = 8,
                            Name = "Buffalo Chicken",
                            Price = 48m,
                            Size = 12.0
                        },
                        new
                        {
                            Id = 9,
                            Name = "Sausage and Mushroom",
                            Price = 92m,
                            Size = 14.0
                        },
                        new
                        {
                            Id = 10,
                            Name = "Four Cheese",
                            Price = 59m,
                            Size = 12.0
                        });
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("StoreManager")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Stores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StoreManager = "John Doe",
                            StoreName = "ABC Grocery"
                        },
                        new
                        {
                            Id = 2,
                            StoreManager = "Jane Smith",
                            StoreName = "XYZ Pharmacy"
                        },
                        new
                        {
                            Id = 3,
                            StoreManager = "Sara Lee",
                            StoreName = "XYZ Pharmacy"
                        },
                        new
                        {
                            Id = 4,
                            StoreManager = "Bob Johnson",
                            StoreName = "123 Mart"
                        },
                        new
                        {
                            Id = 5,
                            StoreManager = "Alice Smith",
                            StoreName = "456 Pharmacy"
                        },
                        new
                        {
                            Id = 6,
                            StoreManager = "Mike Brown",
                            StoreName = "GHI Hardware"
                        },
                        new
                        {
                            Id = 7,
                            StoreManager = "Tom Wilson",
                            StoreName = "JKL Grocery"
                        },
                        new
                        {
                            Id = 8,
                            StoreManager = "Sara Lee",
                            StoreName = "MNO Pharmacy"
                        },
                        new
                        {
                            Id = 9,
                            StoreManager = "John Doe",
                            StoreName = "PQR Hardware"
                        },
                        new
                        {
                            Id = 10,
                            StoreManager = "Jane Smith",
                            StoreName = "STU Grocery"
                        });
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Acme Foods"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Global Ingredients"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Organic Farms Inc."
                        },
                        new
                        {
                            Id = 4,
                            Name = "Gourmet Foods"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Premium Ingredients"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Food Service Distributors"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Sysco Corporation"
                        },
                        new
                        {
                            Id = 8,
                            Name = "US Foods Inc."
                        },
                        new
                        {
                            Id = 9,
                            Name = "Gordon Food Service"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Performance Food Group"
                        });
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Topping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AdditionalCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<int?>("PizzaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PizzaId");

                    b.ToTable("Toppings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdditionalCost = 1.50m,
                            Description = "Spicy cured pork sausage",
                            Name = "Pepperoni",
                            PizzaId = 1
                        },
                        new
                        {
                            Id = 2,
                            AdditionalCost = 0.75m,
                            Description = "Sliced mushrooms",
                            Name = "Mushrooms",
                            PizzaId = 1
                        },
                        new
                        {
                            Id = 3,
                            AdditionalCost = 0.75m,
                            Description = "Sliced green bell peppers",
                            Name = "Green Peppers",
                            PizzaId = 2
                        },
                        new
                        {
                            Id = 4,
                            AdditionalCost = 0.75m,
                            Description = "Sliced onions",
                            Name = "Onions",
                            PizzaId = 2
                        },
                        new
                        {
                            Id = 5,
                            AdditionalCost = 1.50m,
                            Description = "Ground pork sausage",
                            Name = "Sausage",
                            PizzaId = 3
                        },
                        new
                        {
                            Id = 6,
                            AdditionalCost = 1.50m,
                            Description = "Crispy bacon bits",
                            Name = "Bacon",
                            PizzaId = 3
                        },
                        new
                        {
                            Id = 7,
                            AdditionalCost = 0.75m,
                            Description = "Sliced black olives",
                            Name = "Black Olives",
                            PizzaId = 4
                        },
                        new
                        {
                            Id = 8,
                            AdditionalCost = 0.75m,
                            Description = "Sliced jalapeno peppers",
                            Name = "Jalapenos",
                            PizzaId = 4
                        },
                        new
                        {
                            Id = 9,
                            AdditionalCost = 0.75m,
                            Description = "Diced pineapple chunks",
                            Name = "Pineapple",
                            PizzaId = 5
                        },
                        new
                        {
                            Id = 10,
                            AdditionalCost = 1.50m,
                            Description = "Diced ham pieces",
                            Name = "Ham",
                            PizzaId = 5
                        });
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Coupon", b =>
                {
                    b.HasOne("OnlinePizzaOrderingSystemUpdatedAPI.Models.Customer", "Customer")
                        .WithOne("Coupon")
                        .HasForeignKey("OnlinePizzaOrderingSystemUpdatedAPI.Models.Coupon", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.CustomerMenuItems", b =>
                {
                    b.HasOne("OnlinePizzaOrderingSystemUpdatedAPI.Models.Customer", "Customer")
                        .WithMany("OrderMenuItems")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlinePizzaOrderingSystemUpdatedAPI.Models.MenuItem", "MenuItem")
                        .WithMany("OrderMenuItems")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.DeliveryDriver", b =>
                {
                    b.HasOne("OnlinePizzaOrderingSystemUpdatedAPI.Models.Store", "Store")
                        .WithMany("DeliveryDrivers")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Employee", b =>
                {
                    b.HasOne("OnlinePizzaOrderingSystemUpdatedAPI.Models.Location", "Location")
                        .WithMany("Employees")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Ingredient", b =>
                {
                    b.HasOne("OnlinePizzaOrderingSystemUpdatedAPI.Models.Supplier", "Supplier")
                        .WithMany("Ingredients")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Order", b =>
                {
                    b.HasOne("OnlinePizzaOrderingSystemUpdatedAPI.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlinePizzaOrderingSystemUpdatedAPI.Models.DeliveryDriver", "DeliveryDriver")
                        .WithMany("Orders")
                        .HasForeignKey("DeliveryDriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("DeliveryDriver");
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.OrderItem", b =>
                {
                    b.HasOne("OnlinePizzaOrderingSystemUpdatedAPI.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Payment", b =>
                {
                    b.HasOne("OnlinePizzaOrderingSystemUpdatedAPI.Models.Customer", "Customer")
                        .WithOne("Payment")
                        .HasForeignKey("OnlinePizzaOrderingSystemUpdatedAPI.Models.Payment", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Topping", b =>
                {
                    b.HasOne("OnlinePizzaOrderingSystemUpdatedAPI.Models.Pizza", "Pizza")
                        .WithMany("Toppings")
                        .HasForeignKey("PizzaId");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Customer", b =>
                {
                    b.Navigation("Coupon")
                        .IsRequired();

                    b.Navigation("OrderMenuItems");

                    b.Navigation("Orders");

                    b.Navigation("Payment")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.DeliveryDriver", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Location", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.MenuItem", b =>
                {
                    b.Navigation("OrderMenuItems");
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Pizza", b =>
                {
                    b.Navigation("Toppings");
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Store", b =>
                {
                    b.Navigation("DeliveryDrivers");
                });

            modelBuilder.Entity("OnlinePizzaOrderingSystemUpdatedAPI.Models.Supplier", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
